% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/adjust.R
\name{adjust_year}
\alias{adjust_year}
\alias{adjust_year.Date}
\alias{adjust_year.POSIXt}
\alias{adjust_year.clock_zoned_time_point}
\alias{adjust_year.clock_naive_time_point}
\alias{adjust_year.clock_calendar}
\title{Adjust the year}
\usage{
adjust_year(x, value, ...)

\method{adjust_year}{Date}(x, value, ..., day_nonexistent = "last-time")

\method{adjust_year}{POSIXt}(
  x,
  value,
  ...,
  day_nonexistent = "last-time",
  dst_nonexistent = "roll-forward",
  dst_ambiguous = "earliest"
)

\method{adjust_year}{clock_zoned_time_point}(
  x,
  value,
  ...,
  day_nonexistent = "last-time",
  dst_nonexistent = "roll-forward",
  dst_ambiguous = "earliest"
)

\method{adjust_year}{clock_naive_time_point}(x, value, ..., day_nonexistent = "last-time")

\method{adjust_year}{clock_calendar}(x, value, ..., day_nonexistent = "last-time")
}
\arguments{
\item{x}{\verb{[Date / POSIXct / POSIXlt / civil]}

A date-time vector.}

\item{value}{\verb{[integer]}

An integer vector containing the value to adjust to.}

\item{day_nonexistent}{\verb{[character(1)]}

Control the behavior when a nonexistent day is generated. This only happens
when adjusting years, months, or days.
\itemize{
\item \code{"last-time"}: Adjust to the last possible time of the current month.
\item \code{"first-time"}: Adjust to the first possible time of the following month.
\item \code{"last-day"}: Adjust to the last day of the current month. For
date-times, the sub-daily components are kept.
\item \code{"first-day"}: Adjust to the first day of the following month. For
date-times, the sub-daily components are kept.
\item \code{"NA"}: Replace the nonexistent date with \code{NA}.
\item \code{"error"}: Error on nonexistent dates.
}}
}
\description{
\code{adjust_year()} adjusts the year of \code{x} to \code{value}.
}
\examples{
x <- as.Date(c("1970-01-01", "1971-01-01"))
adjust_year(x, 1972)

# Leap day
x <- as.Date("1972-02-29")

# "1973-02-29" doesn't exist. By default this rolls back to the
# the last day in that month.
adjust_year(x, 1973)

# But you can adjust that behavior
adjust_year(x, 1973, day_nonexistent = "first-day")
adjust_year(x, 1973, day_nonexistent = "NA")

# It is possible to adjust into a daylight savings time gap.
# Due to a change in how daylight savings was handled, the Pacific
# island of Samoa skipped all of "2011-12-30" and went straight to the
# 31st. This is considered a "nonexistent" time due to DST.
x <- as.POSIXct("2010-12-30 02:00:00", "Pacific/Apia")

# So "2011-12-30 02:00:00" doesn't exist, and by default we "roll forward"
# to the next possible time, which is "2011-12-31 00:00:00".
adjust_year(x, 2011)

# But you can adjust that too
adjust_year(x, 2011, dst_nonexistent = "roll-backward")
adjust_year(x, 2011, dst_nonexistent = "shift-forward")
}
